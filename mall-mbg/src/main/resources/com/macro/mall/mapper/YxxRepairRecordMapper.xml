<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.YxxRepairRecordMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.YxxRepairRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="worker_id" jdbcType="BIGINT" property="workerId" />
    <result column="before_photos" jdbcType="VARCHAR" property="beforePhotos" />
    <result column="before_photos_detail" jdbcType="VARCHAR" property="beforePhotosDetail" />
    <result column="after_photos" jdbcType="VARCHAR" property="afterPhotos" />
    <result column="after_photos_detail" jdbcType="VARCHAR" property="afterPhotosDetail" />
    <result column="parts_photos" jdbcType="VARCHAR" property="partsPhotos" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, worker_id, before_photos, before_photos_detail, after_photos, after_photos_detail, 
    parts_photos, remark
  </sql>
  <select id="selectByExample" parameterType="com.macro.mall.example.YxxRepairRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yxx_repair_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_repair_record
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yxx_repair_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_repair_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yxx_repair_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.example.YxxRepairRecordExample">
    delete from yxx_repair_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.model.YxxRepairRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_repair_record (order_id, worker_id, before_photos, 
      before_photos_detail, after_photos, after_photos_detail, 
      parts_photos, remark)
    values (#{orderId,jdbcType=BIGINT}, #{workerId,jdbcType=BIGINT}, #{beforePhotos,jdbcType=VARCHAR}, 
      #{beforePhotosDetail,jdbcType=VARCHAR}, #{afterPhotos,jdbcType=VARCHAR}, #{afterPhotosDetail,jdbcType=VARCHAR}, 
      #{partsPhotos,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_repair_record
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.orderId != null">
            order_id,
          </if>
          <if test="record.workerId != null">
            worker_id,
          </if>
          <if test="record.beforePhotos != null">
            before_photos,
          </if>
          <if test="record.beforePhotosDetail != null">
            before_photos_detail,
          </if>
          <if test="record.afterPhotos != null">
            after_photos,
          </if>
          <if test="record.afterPhotosDetail != null">
            after_photos_detail,
          </if>
          <if test="record.partsPhotos != null">
            parts_photos,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.orderId != null">
            #{record.orderId,jdbcType=BIGINT},
          </if>
          <if test="record.workerId != null">
            #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.beforePhotos != null">
            #{record.beforePhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.beforePhotosDetail != null">
            #{record.beforePhotosDetail,jdbcType=VARCHAR},
          </if>
          <if test="record.afterPhotos != null">
            #{record.afterPhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.afterPhotosDetail != null">
            #{record.afterPhotosDetail,jdbcType=VARCHAR},
          </if>
          <if test="record.partsPhotos != null">
            #{record.partsPhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.example.YxxRepairRecordExample" resultType="java.lang.Long">
    select count(*) from yxx_repair_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yxx_repair_record
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.orderId != null">
            order_id = #{record.orderId,jdbcType=BIGINT},
          </if>
          <if test="record.workerId != null">
            worker_id = #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.beforePhotos != null">
            before_photos = #{record.beforePhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.beforePhotosDetail != null">
            before_photos_detail = #{record.beforePhotosDetail,jdbcType=VARCHAR},
          </if>
          <if test="record.afterPhotos != null">
            after_photos = #{record.afterPhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.afterPhotosDetail != null">
            after_photos_detail = #{record.afterPhotosDetail,jdbcType=VARCHAR},
          </if>
          <if test="record.partsPhotos != null">
            parts_photos = #{record.partsPhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yxx_repair_record
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      worker_id = #{record.workerId,jdbcType=BIGINT},
      before_photos = #{record.beforePhotos,jdbcType=VARCHAR},
      before_photos_detail = #{record.beforePhotosDetail,jdbcType=VARCHAR},
      after_photos = #{record.afterPhotos,jdbcType=VARCHAR},
      after_photos_detail = #{record.afterPhotosDetail,jdbcType=VARCHAR},
      parts_photos = #{record.partsPhotos,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update yxx_repair_record
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.orderId != null">
            order_id = #{record.orderId,jdbcType=BIGINT},
          </if>
          <if test="record.workerId != null">
            worker_id = #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.beforePhotos != null">
            before_photos = #{record.beforePhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.beforePhotosDetail != null">
            before_photos_detail = #{record.beforePhotosDetail,jdbcType=VARCHAR},
          </if>
          <if test="record.afterPhotos != null">
            after_photos = #{record.afterPhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.afterPhotosDetail != null">
            after_photos_detail = #{record.afterPhotosDetail,jdbcType=VARCHAR},
          </if>
          <if test="record.partsPhotos != null">
            parts_photos = #{record.partsPhotos,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.YxxRepairRecord">
    update yxx_repair_record
    set order_id = #{orderId,jdbcType=BIGINT},
      worker_id = #{workerId,jdbcType=BIGINT},
      before_photos = #{beforePhotos,jdbcType=VARCHAR},
      before_photos_detail = #{beforePhotosDetail,jdbcType=VARCHAR},
      after_photos = #{afterPhotos,jdbcType=VARCHAR},
      after_photos_detail = #{afterPhotosDetail,jdbcType=VARCHAR},
      parts_photos = #{partsPhotos,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.macro.mall.example.YxxRepairRecordExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxx_repair_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_repair_record
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_repair_record
    (order_id, worker_id, before_photos, before_photos_detail, after_photos, after_photos_detail, 
      parts_photos, remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.orderId,jdbcType=BIGINT}, #{item.workerId,jdbcType=BIGINT}, #{item.beforePhotos,jdbcType=VARCHAR}, 
        #{item.beforePhotosDetail,jdbcType=VARCHAR}, #{item.afterPhotos,jdbcType=VARCHAR}, 
        #{item.afterPhotosDetail,jdbcType=VARCHAR}, #{item.partsPhotos,jdbcType=VARCHAR}, 
        #{item.remark,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_repair_record (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'order_id'.toString() == column.value">
          #{item.orderId,jdbcType=BIGINT}
        </if>
        <if test="'worker_id'.toString() == column.value">
          #{item.workerId,jdbcType=BIGINT}
        </if>
        <if test="'before_photos'.toString() == column.value">
          #{item.beforePhotos,jdbcType=VARCHAR}
        </if>
        <if test="'before_photos_detail'.toString() == column.value">
          #{item.beforePhotosDetail,jdbcType=VARCHAR}
        </if>
        <if test="'after_photos'.toString() == column.value">
          #{item.afterPhotos,jdbcType=VARCHAR}
        </if>
        <if test="'after_photos_detail'.toString() == column.value">
          #{item.afterPhotosDetail,jdbcType=VARCHAR}
        </if>
        <if test="'parts_photos'.toString() == column.value">
          #{item.partsPhotos,jdbcType=VARCHAR}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>