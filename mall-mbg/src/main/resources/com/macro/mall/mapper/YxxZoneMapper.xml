<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.YxxZoneMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.YxxZone">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="enable" jdbcType="INTEGER" property="enable" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="region_id" jdbcType="BIGINT" property="regionId" />
    <result column="is_manual" jdbcType="INTEGER" property="isManual" />
    <result column="cut_percent" jdbcType="DECIMAL" property="cutPercent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, `location`, `enable`, `status`, region_id, is_manual, cut_percent, create_time
  </sql>
  <select id="selectByExample" parameterType="com.macro.mall.example.YxxZoneExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yxx_zone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_zone
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yxx_zone
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_zone
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yxx_zone
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.example.YxxZoneExample">
    delete from yxx_zone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.model.YxxZone">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_zone (`name`, `location`, `enable`, 
      `status`, region_id, is_manual, 
      cut_percent, create_time)
    values (#{name,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, #{enable,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{regionId,jdbcType=BIGINT}, #{isManual,jdbcType=INTEGER}, 
      #{cutPercent,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_zone
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.name != null">
            `name`,
          </if>
          <if test="record.location != null">
            `location`,
          </if>
          <if test="record.enable != null">
            `enable`,
          </if>
          <if test="record.status != null">
            `status`,
          </if>
          <if test="record.regionId != null">
            region_id,
          </if>
          <if test="record.isManual != null">
            is_manual,
          </if>
          <if test="record.cutPercent != null">
            cut_percent,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.enable != null">
            #{record.enable,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.regionId != null">
            #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.isManual != null">
            #{record.isManual,jdbcType=INTEGER},
          </if>
          <if test="record.cutPercent != null">
            #{record.cutPercent,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.example.YxxZoneExample" resultType="java.lang.Long">
    select count(*) from yxx_zone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yxx_zone
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            `location` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.enable != null">
            `enable` = #{record.enable,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.regionId != null">
            region_id = #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.isManual != null">
            is_manual = #{record.isManual,jdbcType=INTEGER},
          </if>
          <if test="record.cutPercent != null">
            cut_percent = #{record.cutPercent,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yxx_zone
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      `location` = #{record.location,jdbcType=VARCHAR},
      `enable` = #{record.enable,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      region_id = #{record.regionId,jdbcType=BIGINT},
      is_manual = #{record.isManual,jdbcType=INTEGER},
      cut_percent = #{record.cutPercent,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update yxx_zone
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            `location` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.enable != null">
            `enable` = #{record.enable,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.regionId != null">
            region_id = #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.isManual != null">
            is_manual = #{record.isManual,jdbcType=INTEGER},
          </if>
          <if test="record.cutPercent != null">
            cut_percent = #{record.cutPercent,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.YxxZone">
    update yxx_zone
    set `name` = #{name,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR},
      `enable` = #{enable,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      region_id = #{regionId,jdbcType=BIGINT},
      is_manual = #{isManual,jdbcType=INTEGER},
      cut_percent = #{cutPercent,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.macro.mall.example.YxxZoneExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxx_zone
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_zone
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_zone
    (`name`, `location`, `enable`, `status`, region_id, is_manual, cut_percent, create_time
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.name,jdbcType=VARCHAR}, #{item.location,jdbcType=VARCHAR}, #{item.enable,jdbcType=INTEGER}, 
        #{item.status,jdbcType=INTEGER}, #{item.regionId,jdbcType=BIGINT}, #{item.isManual,jdbcType=INTEGER}, 
        #{item.cutPercent,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_zone (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'location'.toString() == column.value">
          #{item.location,jdbcType=VARCHAR}
        </if>
        <if test="'enable'.toString() == column.value">
          #{item.enable,jdbcType=INTEGER}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'region_id'.toString() == column.value">
          #{item.regionId,jdbcType=BIGINT}
        </if>
        <if test="'is_manual'.toString() == column.value">
          #{item.isManual,jdbcType=INTEGER}
        </if>
        <if test="'cut_percent'.toString() == column.value">
          #{item.cutPercent,jdbcType=DECIMAL}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>