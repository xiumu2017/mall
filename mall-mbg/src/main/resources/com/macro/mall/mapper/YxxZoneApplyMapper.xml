<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.YxxZoneApplyMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.YxxZoneApply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="worker_id" jdbcType="BIGINT" property="workerId" />
    <result column="worker_name" jdbcType="VARCHAR" property="workerName" />
    <result column="region_id" jdbcType="BIGINT" property="regionId" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="zone_id" jdbcType="BIGINT" property="zoneId" />
    <result column="apply_content" jdbcType="VARCHAR" property="applyContent" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="apply_status" jdbcType="INTEGER" property="applyStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, worker_id, worker_name, region_id, region_name, zone_id, apply_content, apply_time, 
    apply_status, remark
  </sql>
  <select id="selectByExample" parameterType="com.macro.mall.example.YxxZoneApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yxx_zone_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_zone_apply
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yxx_zone_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_zone_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yxx_zone_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.example.YxxZoneApplyExample">
    delete from yxx_zone_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.model.YxxZoneApply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_zone_apply (worker_id, worker_name, region_id, 
      region_name, zone_id, apply_content, 
      apply_time, apply_status, remark
      )
    values (#{workerId,jdbcType=BIGINT}, #{workerName,jdbcType=VARCHAR}, #{regionId,jdbcType=BIGINT}, 
      #{regionName,jdbcType=VARCHAR}, #{zoneId,jdbcType=BIGINT}, #{applyContent,jdbcType=VARCHAR}, 
      #{applyTime,jdbcType=TIMESTAMP}, #{applyStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_zone_apply
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.workerId != null">
            worker_id,
          </if>
          <if test="record.workerName != null">
            worker_name,
          </if>
          <if test="record.regionId != null">
            region_id,
          </if>
          <if test="record.regionName != null">
            region_name,
          </if>
          <if test="record.zoneId != null">
            zone_id,
          </if>
          <if test="record.applyContent != null">
            apply_content,
          </if>
          <if test="record.applyTime != null">
            apply_time,
          </if>
          <if test="record.applyStatus != null">
            apply_status,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.workerId != null">
            #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.workerName != null">
            #{record.workerName,jdbcType=VARCHAR},
          </if>
          <if test="record.regionId != null">
            #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.regionName != null">
            #{record.regionName,jdbcType=VARCHAR},
          </if>
          <if test="record.zoneId != null">
            #{record.zoneId,jdbcType=BIGINT},
          </if>
          <if test="record.applyContent != null">
            #{record.applyContent,jdbcType=VARCHAR},
          </if>
          <if test="record.applyTime != null">
            #{record.applyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.applyStatus != null">
            #{record.applyStatus,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.example.YxxZoneApplyExample" resultType="java.lang.Long">
    select count(*) from yxx_zone_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yxx_zone_apply
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.workerId != null">
            worker_id = #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.workerName != null">
            worker_name = #{record.workerName,jdbcType=VARCHAR},
          </if>
          <if test="record.regionId != null">
            region_id = #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.regionName != null">
            region_name = #{record.regionName,jdbcType=VARCHAR},
          </if>
          <if test="record.zoneId != null">
            zone_id = #{record.zoneId,jdbcType=BIGINT},
          </if>
          <if test="record.applyContent != null">
            apply_content = #{record.applyContent,jdbcType=VARCHAR},
          </if>
          <if test="record.applyTime != null">
            apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.applyStatus != null">
            apply_status = #{record.applyStatus,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yxx_zone_apply
    set id = #{record.id,jdbcType=BIGINT},
      worker_id = #{record.workerId,jdbcType=BIGINT},
      worker_name = #{record.workerName,jdbcType=VARCHAR},
      region_id = #{record.regionId,jdbcType=BIGINT},
      region_name = #{record.regionName,jdbcType=VARCHAR},
      zone_id = #{record.zoneId,jdbcType=BIGINT},
      apply_content = #{record.applyContent,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      apply_status = #{record.applyStatus,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update yxx_zone_apply
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.workerId != null">
            worker_id = #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.workerName != null">
            worker_name = #{record.workerName,jdbcType=VARCHAR},
          </if>
          <if test="record.regionId != null">
            region_id = #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.regionName != null">
            region_name = #{record.regionName,jdbcType=VARCHAR},
          </if>
          <if test="record.zoneId != null">
            zone_id = #{record.zoneId,jdbcType=BIGINT},
          </if>
          <if test="record.applyContent != null">
            apply_content = #{record.applyContent,jdbcType=VARCHAR},
          </if>
          <if test="record.applyTime != null">
            apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.applyStatus != null">
            apply_status = #{record.applyStatus,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.YxxZoneApply">
    update yxx_zone_apply
    set worker_id = #{workerId,jdbcType=BIGINT},
      worker_name = #{workerName,jdbcType=VARCHAR},
      region_id = #{regionId,jdbcType=BIGINT},
      region_name = #{regionName,jdbcType=VARCHAR},
      zone_id = #{zoneId,jdbcType=BIGINT},
      apply_content = #{applyContent,jdbcType=VARCHAR},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      apply_status = #{applyStatus,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.macro.mall.example.YxxZoneApplyExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxx_zone_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_zone_apply
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_zone_apply
    (worker_id, worker_name, region_id, region_name, zone_id, apply_content, apply_time, 
      apply_status, remark)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.workerId,jdbcType=BIGINT}, #{item.workerName,jdbcType=VARCHAR}, #{item.regionId,jdbcType=BIGINT}, 
        #{item.regionName,jdbcType=VARCHAR}, #{item.zoneId,jdbcType=BIGINT}, #{item.applyContent,jdbcType=VARCHAR}, 
        #{item.applyTime,jdbcType=TIMESTAMP}, #{item.applyStatus,jdbcType=INTEGER}, #{item.remark,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_zone_apply (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'worker_id'.toString() == column.value">
          #{item.workerId,jdbcType=BIGINT}
        </if>
        <if test="'worker_name'.toString() == column.value">
          #{item.workerName,jdbcType=VARCHAR}
        </if>
        <if test="'region_id'.toString() == column.value">
          #{item.regionId,jdbcType=BIGINT}
        </if>
        <if test="'region_name'.toString() == column.value">
          #{item.regionName,jdbcType=VARCHAR}
        </if>
        <if test="'zone_id'.toString() == column.value">
          #{item.zoneId,jdbcType=BIGINT}
        </if>
        <if test="'apply_content'.toString() == column.value">
          #{item.applyContent,jdbcType=VARCHAR}
        </if>
        <if test="'apply_time'.toString() == column.value">
          #{item.applyTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'apply_status'.toString() == column.value">
          #{item.applyStatus,jdbcType=INTEGER}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>