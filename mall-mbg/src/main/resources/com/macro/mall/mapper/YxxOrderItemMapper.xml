<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.YxxOrderItemMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.YxxOrderItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="price" jdbcType="DECIMAL" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, product_id, sku_id, amount, price
  </sql>
  <select id="selectByExample" parameterType="com.macro.mall.example.YxxOrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yxx_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_order_item
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yxx_order_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_order_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yxx_order_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.example.YxxOrderItemExample">
    delete from yxx_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.model.YxxOrderItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_order_item (order_id, product_id, sku_id, 
      amount, price)
    values (#{orderId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{skuId,jdbcType=BIGINT}, 
      #{amount,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_order_item
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.orderId != null">
            order_id,
          </if>
          <if test="record.productId != null">
            product_id,
          </if>
          <if test="record.skuId != null">
            sku_id,
          </if>
          <if test="record.amount != null">
            amount,
          </if>
          <if test="record.price != null">
            price,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.orderId != null">
            #{record.orderId,jdbcType=BIGINT},
          </if>
          <if test="record.productId != null">
            #{record.productId,jdbcType=BIGINT},
          </if>
          <if test="record.skuId != null">
            #{record.skuId,jdbcType=BIGINT},
          </if>
          <if test="record.amount != null">
            #{record.amount,jdbcType=INTEGER},
          </if>
          <if test="record.price != null">
            #{record.price,jdbcType=DECIMAL},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.example.YxxOrderItemExample" resultType="java.lang.Long">
    select count(*) from yxx_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yxx_order_item
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.orderId != null">
            order_id = #{record.orderId,jdbcType=BIGINT},
          </if>
          <if test="record.productId != null">
            product_id = #{record.productId,jdbcType=BIGINT},
          </if>
          <if test="record.skuId != null">
            sku_id = #{record.skuId,jdbcType=BIGINT},
          </if>
          <if test="record.amount != null">
            amount = #{record.amount,jdbcType=INTEGER},
          </if>
          <if test="record.price != null">
            price = #{record.price,jdbcType=DECIMAL},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yxx_order_item
    set id = #{record.id,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update yxx_order_item
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.orderId != null">
            order_id = #{record.orderId,jdbcType=BIGINT},
          </if>
          <if test="record.productId != null">
            product_id = #{record.productId,jdbcType=BIGINT},
          </if>
          <if test="record.skuId != null">
            sku_id = #{record.skuId,jdbcType=BIGINT},
          </if>
          <if test="record.amount != null">
            amount = #{record.amount,jdbcType=INTEGER},
          </if>
          <if test="record.price != null">
            price = #{record.price,jdbcType=DECIMAL},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.YxxOrderItem">
    update yxx_order_item
    set order_id = #{orderId,jdbcType=BIGINT},
      product_id = #{productId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.macro.mall.example.YxxOrderItemExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxx_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_order_item
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_order_item
    (order_id, product_id, sku_id, amount, price)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.orderId,jdbcType=BIGINT}, #{item.productId,jdbcType=BIGINT}, #{item.skuId,jdbcType=BIGINT}, 
        #{item.amount,jdbcType=INTEGER}, #{item.price,jdbcType=DECIMAL})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_order_item (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'order_id'.toString() == column.value">
          #{item.orderId,jdbcType=BIGINT}
        </if>
        <if test="'product_id'.toString() == column.value">
          #{item.productId,jdbcType=BIGINT}
        </if>
        <if test="'sku_id'.toString() == column.value">
          #{item.skuId,jdbcType=BIGINT}
        </if>
        <if test="'amount'.toString() == column.value">
          #{item.amount,jdbcType=INTEGER}
        </if>
        <if test="'price'.toString() == column.value">
          #{item.price,jdbcType=DECIMAL}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>