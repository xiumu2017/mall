<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.YxxMemberAddressMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.YxxMemberAddress">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="default_status" jdbcType="INTEGER" property="defaultStatus" />
    <result column="post_code" jdbcType="VARCHAR" property="postCode" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="repair_address" jdbcType="VARCHAR" property="repairAddress" />
    <result column="detail_address" jdbcType="VARCHAR" property="detailAddress" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, member_id, `name`, sex, phone_number, default_status, post_code, province, city, 
    region, repair_address, detail_address, `location`, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.macro.mall.example.YxxMemberAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yxx_member_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_member_address
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yxx_member_address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_member_address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yxx_member_address
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.example.YxxMemberAddressExample">
    delete from yxx_member_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.model.YxxMemberAddress">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_member_address (member_id, `name`, sex, 
      phone_number, default_status, post_code, 
      province, city, region, 
      repair_address, detail_address, `location`, 
      create_time, update_time)
    values (#{memberId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{phoneNumber,jdbcType=VARCHAR}, #{defaultStatus,jdbcType=INTEGER}, #{postCode,jdbcType=VARCHAR}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{repairAddress,jdbcType=VARCHAR}, #{detailAddress,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_member_address
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.memberId != null">
            member_id,
          </if>
          <if test="record.name != null">
            `name`,
          </if>
          <if test="record.sex != null">
            sex,
          </if>
          <if test="record.phoneNumber != null">
            phone_number,
          </if>
          <if test="record.defaultStatus != null">
            default_status,
          </if>
          <if test="record.postCode != null">
            post_code,
          </if>
          <if test="record.province != null">
            province,
          </if>
          <if test="record.city != null">
            city,
          </if>
          <if test="record.region != null">
            region,
          </if>
          <if test="record.repairAddress != null">
            repair_address,
          </if>
          <if test="record.detailAddress != null">
            detail_address,
          </if>
          <if test="record.location != null">
            `location`,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.memberId != null">
            #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.sex != null">
            #{record.sex,jdbcType=INTEGER},
          </if>
          <if test="record.phoneNumber != null">
            #{record.phoneNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.defaultStatus != null">
            #{record.defaultStatus,jdbcType=INTEGER},
          </if>
          <if test="record.postCode != null">
            #{record.postCode,jdbcType=VARCHAR},
          </if>
          <if test="record.province != null">
            #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.region != null">
            #{record.region,jdbcType=VARCHAR},
          </if>
          <if test="record.repairAddress != null">
            #{record.repairAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.detailAddress != null">
            #{record.detailAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.example.YxxMemberAddressExample" resultType="java.lang.Long">
    select count(*) from yxx_member_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yxx_member_address
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.sex != null">
            sex = #{record.sex,jdbcType=INTEGER},
          </if>
          <if test="record.phoneNumber != null">
            phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.defaultStatus != null">
            default_status = #{record.defaultStatus,jdbcType=INTEGER},
          </if>
          <if test="record.postCode != null">
            post_code = #{record.postCode,jdbcType=VARCHAR},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.region != null">
            region = #{record.region,jdbcType=VARCHAR},
          </if>
          <if test="record.repairAddress != null">
            repair_address = #{record.repairAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.detailAddress != null">
            detail_address = #{record.detailAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            `location` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yxx_member_address
    set id = #{record.id,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      default_status = #{record.defaultStatus,jdbcType=INTEGER},
      post_code = #{record.postCode,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      repair_address = #{record.repairAddress,jdbcType=VARCHAR},
      detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      `location` = #{record.location,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update yxx_member_address
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.sex != null">
            sex = #{record.sex,jdbcType=INTEGER},
          </if>
          <if test="record.phoneNumber != null">
            phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
          </if>
          <if test="record.defaultStatus != null">
            default_status = #{record.defaultStatus,jdbcType=INTEGER},
          </if>
          <if test="record.postCode != null">
            post_code = #{record.postCode,jdbcType=VARCHAR},
          </if>
          <if test="record.province != null">
            province = #{record.province,jdbcType=VARCHAR},
          </if>
          <if test="record.city != null">
            city = #{record.city,jdbcType=VARCHAR},
          </if>
          <if test="record.region != null">
            region = #{record.region,jdbcType=VARCHAR},
          </if>
          <if test="record.repairAddress != null">
            repair_address = #{record.repairAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.detailAddress != null">
            detail_address = #{record.detailAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.location != null">
            `location` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.YxxMemberAddress">
    update yxx_member_address
    set member_id = #{memberId,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      default_status = #{defaultStatus,jdbcType=INTEGER},
      post_code = #{postCode,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      repair_address = #{repairAddress,jdbcType=VARCHAR},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.macro.mall.example.YxxMemberAddressExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxx_member_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_member_address
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_member_address
    (member_id, `name`, sex, phone_number, default_status, post_code, province, city, 
      region, repair_address, detail_address, `location`, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.memberId,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.sex,jdbcType=INTEGER}, 
        #{item.phoneNumber,jdbcType=VARCHAR}, #{item.defaultStatus,jdbcType=INTEGER}, #{item.postCode,jdbcType=VARCHAR}, 
        #{item.province,jdbcType=VARCHAR}, #{item.city,jdbcType=VARCHAR}, #{item.region,jdbcType=VARCHAR}, 
        #{item.repairAddress,jdbcType=VARCHAR}, #{item.detailAddress,jdbcType=VARCHAR}, 
        #{item.location,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_member_address (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'member_id'.toString() == column.value">
          #{item.memberId,jdbcType=BIGINT}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'sex'.toString() == column.value">
          #{item.sex,jdbcType=INTEGER}
        </if>
        <if test="'phone_number'.toString() == column.value">
          #{item.phoneNumber,jdbcType=VARCHAR}
        </if>
        <if test="'default_status'.toString() == column.value">
          #{item.defaultStatus,jdbcType=INTEGER}
        </if>
        <if test="'post_code'.toString() == column.value">
          #{item.postCode,jdbcType=VARCHAR}
        </if>
        <if test="'province'.toString() == column.value">
          #{item.province,jdbcType=VARCHAR}
        </if>
        <if test="'city'.toString() == column.value">
          #{item.city,jdbcType=VARCHAR}
        </if>
        <if test="'region'.toString() == column.value">
          #{item.region,jdbcType=VARCHAR}
        </if>
        <if test="'repair_address'.toString() == column.value">
          #{item.repairAddress,jdbcType=VARCHAR}
        </if>
        <if test="'detail_address'.toString() == column.value">
          #{item.detailAddress,jdbcType=VARCHAR}
        </if>
        <if test="'location'.toString() == column.value">
          #{item.location,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>