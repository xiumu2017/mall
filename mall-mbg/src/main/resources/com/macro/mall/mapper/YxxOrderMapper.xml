<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.YxxOrderMapper">
  <resultMap id="BaseResultMap" type="com.macro.mall.model.YxxOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_sn" jdbcType="VARCHAR" property="orderSn" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="tel_no" jdbcType="VARCHAR" property="telNo" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_sex" jdbcType="INTEGER" property="memberSex" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="sku_id" jdbcType="BIGINT" property="skuId" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="worker_id" jdbcType="BIGINT" property="workerId" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="detail_address" jdbcType="VARCHAR" property="detailAddress" />
    <result column="visit_time_start" jdbcType="TIMESTAMP" property="visitTimeStart" />
    <result column="visit_time_end" jdbcType="TIMESTAMP" property="visitTimeEnd" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="photos" jdbcType="VARCHAR" property="photos" />
    <result column="coupon_id" jdbcType="BIGINT" property="couponId" />
    <result column="is_bargain" jdbcType="INTEGER" property="isBargain" />
    <result column="is_transfer" jdbcType="INTEGER" property="isTransfer" />
    <result column="cancel_reason" jdbcType="VARCHAR" property="cancelReason" />
    <result column="pause_reason" jdbcType="VARCHAR" property="pauseReason" />
    <result column="offer_price" jdbcType="DECIMAL" property="offerPrice" />
    <result column="discount_price" jdbcType="DECIMAL" property="discountPrice" />
    <result column="pay_price" jdbcType="DECIMAL" property="payPrice" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="zone_id" jdbcType="BIGINT" property="zoneId" />
    <result column="region_id" jdbcType="BIGINT" property="regionId" />
    <result column="order_type" jdbcType="INTEGER" property="orderType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_sn, member_id, tel_no, member_name, member_sex, product_id, sku_id, order_status, 
    worker_id, `location`, address, detail_address, visit_time_start, visit_time_end, 
    remark, photos, coupon_id, is_bargain, is_transfer, cancel_reason, pause_reason, 
    offer_price, discount_price, pay_price, create_time, update_time, zone_id, region_id, 
    order_type
  </sql>
  <select id="selectByExample" parameterType="com.macro.mall.example.YxxOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yxx_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_order
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yxx_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yxx_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.macro.mall.example.YxxOrderExample">
    delete from yxx_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.macro.mall.model.YxxOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_order (order_sn, member_id, tel_no, 
      member_name, member_sex, product_id, 
      sku_id, order_status, worker_id, 
      `location`, address, detail_address, 
      visit_time_start, visit_time_end, remark, 
      photos, coupon_id, is_bargain, 
      is_transfer, cancel_reason, pause_reason, 
      offer_price, discount_price, pay_price, 
      create_time, update_time, zone_id, 
      region_id, order_type)
    values (#{orderSn,jdbcType=VARCHAR}, #{memberId,jdbcType=BIGINT}, #{telNo,jdbcType=VARCHAR}, 
      #{memberName,jdbcType=VARCHAR}, #{memberSex,jdbcType=INTEGER}, #{productId,jdbcType=BIGINT}, 
      #{skuId,jdbcType=BIGINT}, #{orderStatus,jdbcType=INTEGER}, #{workerId,jdbcType=BIGINT}, 
      #{location,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{detailAddress,jdbcType=VARCHAR}, 
      #{visitTimeStart,jdbcType=TIMESTAMP}, #{visitTimeEnd,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{photos,jdbcType=VARCHAR}, #{couponId,jdbcType=BIGINT}, #{isBargain,jdbcType=INTEGER}, 
      #{isTransfer,jdbcType=INTEGER}, #{cancelReason,jdbcType=VARCHAR}, #{pauseReason,jdbcType=VARCHAR}, 
      #{offerPrice,jdbcType=DECIMAL}, #{discountPrice,jdbcType=DECIMAL}, #{payPrice,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{zoneId,jdbcType=BIGINT}, 
      #{regionId,jdbcType=BIGINT}, #{orderType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yxx_order
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.orderSn != null">
            order_sn,
          </if>
          <if test="record.memberId != null">
            member_id,
          </if>
          <if test="record.telNo != null">
            tel_no,
          </if>
          <if test="record.memberName != null">
            member_name,
          </if>
          <if test="record.memberSex != null">
            member_sex,
          </if>
          <if test="record.productId != null">
            product_id,
          </if>
          <if test="record.skuId != null">
            sku_id,
          </if>
          <if test="record.orderStatus != null">
            order_status,
          </if>
          <if test="record.workerId != null">
            worker_id,
          </if>
          <if test="record.location != null">
            `location`,
          </if>
          <if test="record.address != null">
            address,
          </if>
          <if test="record.detailAddress != null">
            detail_address,
          </if>
          <if test="record.visitTimeStart != null">
            visit_time_start,
          </if>
          <if test="record.visitTimeEnd != null">
            visit_time_end,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.photos != null">
            photos,
          </if>
          <if test="record.couponId != null">
            coupon_id,
          </if>
          <if test="record.isBargain != null">
            is_bargain,
          </if>
          <if test="record.isTransfer != null">
            is_transfer,
          </if>
          <if test="record.cancelReason != null">
            cancel_reason,
          </if>
          <if test="record.pauseReason != null">
            pause_reason,
          </if>
          <if test="record.offerPrice != null">
            offer_price,
          </if>
          <if test="record.discountPrice != null">
            discount_price,
          </if>
          <if test="record.payPrice != null">
            pay_price,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.zoneId != null">
            zone_id,
          </if>
          <if test="record.regionId != null">
            region_id,
          </if>
          <if test="record.orderType != null">
            order_type,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.orderSn != null">
            #{record.orderSn,jdbcType=VARCHAR},
          </if>
          <if test="record.memberId != null">
            #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.telNo != null">
            #{record.telNo,jdbcType=VARCHAR},
          </if>
          <if test="record.memberName != null">
            #{record.memberName,jdbcType=VARCHAR},
          </if>
          <if test="record.memberSex != null">
            #{record.memberSex,jdbcType=INTEGER},
          </if>
          <if test="record.productId != null">
            #{record.productId,jdbcType=BIGINT},
          </if>
          <if test="record.skuId != null">
            #{record.skuId,jdbcType=BIGINT},
          </if>
          <if test="record.orderStatus != null">
            #{record.orderStatus,jdbcType=INTEGER},
          </if>
          <if test="record.workerId != null">
            #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.location != null">
            #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.detailAddress != null">
            #{record.detailAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.visitTimeStart != null">
            #{record.visitTimeStart,jdbcType=TIMESTAMP},
          </if>
          <if test="record.visitTimeEnd != null">
            #{record.visitTimeEnd,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.photos != null">
            #{record.photos,jdbcType=VARCHAR},
          </if>
          <if test="record.couponId != null">
            #{record.couponId,jdbcType=BIGINT},
          </if>
          <if test="record.isBargain != null">
            #{record.isBargain,jdbcType=INTEGER},
          </if>
          <if test="record.isTransfer != null">
            #{record.isTransfer,jdbcType=INTEGER},
          </if>
          <if test="record.cancelReason != null">
            #{record.cancelReason,jdbcType=VARCHAR},
          </if>
          <if test="record.pauseReason != null">
            #{record.pauseReason,jdbcType=VARCHAR},
          </if>
          <if test="record.offerPrice != null">
            #{record.offerPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.discountPrice != null">
            #{record.discountPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.payPrice != null">
            #{record.payPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.zoneId != null">
            #{record.zoneId,jdbcType=BIGINT},
          </if>
          <if test="record.regionId != null">
            #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.orderType != null">
            #{record.orderType,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.macro.mall.example.YxxOrderExample" resultType="java.lang.Long">
    select count(*) from yxx_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yxx_order
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.orderSn != null">
            order_sn = #{record.orderSn,jdbcType=VARCHAR},
          </if>
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.telNo != null">
            tel_no = #{record.telNo,jdbcType=VARCHAR},
          </if>
          <if test="record.memberName != null">
            member_name = #{record.memberName,jdbcType=VARCHAR},
          </if>
          <if test="record.memberSex != null">
            member_sex = #{record.memberSex,jdbcType=INTEGER},
          </if>
          <if test="record.productId != null">
            product_id = #{record.productId,jdbcType=BIGINT},
          </if>
          <if test="record.skuId != null">
            sku_id = #{record.skuId,jdbcType=BIGINT},
          </if>
          <if test="record.orderStatus != null">
            order_status = #{record.orderStatus,jdbcType=INTEGER},
          </if>
          <if test="record.workerId != null">
            worker_id = #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.location != null">
            `location` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            address = #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.detailAddress != null">
            detail_address = #{record.detailAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.visitTimeStart != null">
            visit_time_start = #{record.visitTimeStart,jdbcType=TIMESTAMP},
          </if>
          <if test="record.visitTimeEnd != null">
            visit_time_end = #{record.visitTimeEnd,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.photos != null">
            photos = #{record.photos,jdbcType=VARCHAR},
          </if>
          <if test="record.couponId != null">
            coupon_id = #{record.couponId,jdbcType=BIGINT},
          </if>
          <if test="record.isBargain != null">
            is_bargain = #{record.isBargain,jdbcType=INTEGER},
          </if>
          <if test="record.isTransfer != null">
            is_transfer = #{record.isTransfer,jdbcType=INTEGER},
          </if>
          <if test="record.cancelReason != null">
            cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
          </if>
          <if test="record.pauseReason != null">
            pause_reason = #{record.pauseReason,jdbcType=VARCHAR},
          </if>
          <if test="record.offerPrice != null">
            offer_price = #{record.offerPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.discountPrice != null">
            discount_price = #{record.discountPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.payPrice != null">
            pay_price = #{record.payPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.zoneId != null">
            zone_id = #{record.zoneId,jdbcType=BIGINT},
          </if>
          <if test="record.regionId != null">
            region_id = #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.orderType != null">
            order_type = #{record.orderType,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yxx_order
    set id = #{record.id,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=BIGINT},
      tel_no = #{record.telNo,jdbcType=VARCHAR},
      member_name = #{record.memberName,jdbcType=VARCHAR},
      member_sex = #{record.memberSex,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=BIGINT},
      sku_id = #{record.skuId,jdbcType=BIGINT},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      worker_id = #{record.workerId,jdbcType=BIGINT},
      `location` = #{record.location,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      visit_time_start = #{record.visitTimeStart,jdbcType=TIMESTAMP},
      visit_time_end = #{record.visitTimeEnd,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      photos = #{record.photos,jdbcType=VARCHAR},
      coupon_id = #{record.couponId,jdbcType=BIGINT},
      is_bargain = #{record.isBargain,jdbcType=INTEGER},
      is_transfer = #{record.isTransfer,jdbcType=INTEGER},
      cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
      pause_reason = #{record.pauseReason,jdbcType=VARCHAR},
      offer_price = #{record.offerPrice,jdbcType=DECIMAL},
      discount_price = #{record.discountPrice,jdbcType=DECIMAL},
      pay_price = #{record.payPrice,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      zone_id = #{record.zoneId,jdbcType=BIGINT},
      region_id = #{record.regionId,jdbcType=BIGINT},
      order_type = #{record.orderType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update yxx_order
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.orderSn != null">
            order_sn = #{record.orderSn,jdbcType=VARCHAR},
          </if>
          <if test="record.memberId != null">
            member_id = #{record.memberId,jdbcType=BIGINT},
          </if>
          <if test="record.telNo != null">
            tel_no = #{record.telNo,jdbcType=VARCHAR},
          </if>
          <if test="record.memberName != null">
            member_name = #{record.memberName,jdbcType=VARCHAR},
          </if>
          <if test="record.memberSex != null">
            member_sex = #{record.memberSex,jdbcType=INTEGER},
          </if>
          <if test="record.productId != null">
            product_id = #{record.productId,jdbcType=BIGINT},
          </if>
          <if test="record.skuId != null">
            sku_id = #{record.skuId,jdbcType=BIGINT},
          </if>
          <if test="record.orderStatus != null">
            order_status = #{record.orderStatus,jdbcType=INTEGER},
          </if>
          <if test="record.workerId != null">
            worker_id = #{record.workerId,jdbcType=BIGINT},
          </if>
          <if test="record.location != null">
            `location` = #{record.location,jdbcType=VARCHAR},
          </if>
          <if test="record.address != null">
            address = #{record.address,jdbcType=VARCHAR},
          </if>
          <if test="record.detailAddress != null">
            detail_address = #{record.detailAddress,jdbcType=VARCHAR},
          </if>
          <if test="record.visitTimeStart != null">
            visit_time_start = #{record.visitTimeStart,jdbcType=TIMESTAMP},
          </if>
          <if test="record.visitTimeEnd != null">
            visit_time_end = #{record.visitTimeEnd,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.photos != null">
            photos = #{record.photos,jdbcType=VARCHAR},
          </if>
          <if test="record.couponId != null">
            coupon_id = #{record.couponId,jdbcType=BIGINT},
          </if>
          <if test="record.isBargain != null">
            is_bargain = #{record.isBargain,jdbcType=INTEGER},
          </if>
          <if test="record.isTransfer != null">
            is_transfer = #{record.isTransfer,jdbcType=INTEGER},
          </if>
          <if test="record.cancelReason != null">
            cancel_reason = #{record.cancelReason,jdbcType=VARCHAR},
          </if>
          <if test="record.pauseReason != null">
            pause_reason = #{record.pauseReason,jdbcType=VARCHAR},
          </if>
          <if test="record.offerPrice != null">
            offer_price = #{record.offerPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.discountPrice != null">
            discount_price = #{record.discountPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.payPrice != null">
            pay_price = #{record.payPrice,jdbcType=DECIMAL},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.zoneId != null">
            zone_id = #{record.zoneId,jdbcType=BIGINT},
          </if>
          <if test="record.regionId != null">
            region_id = #{record.regionId,jdbcType=BIGINT},
          </if>
          <if test="record.orderType != null">
            order_type = #{record.orderType,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.YxxOrder">
    update yxx_order
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=BIGINT},
      tel_no = #{telNo,jdbcType=VARCHAR},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      order_status = #{orderStatus,jdbcType=INTEGER},
      worker_id = #{workerId,jdbcType=BIGINT},
      `location` = #{location,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
      visit_time_start = #{visitTimeStart,jdbcType=TIMESTAMP},
      visit_time_end = #{visitTimeEnd,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      photos = #{photos,jdbcType=VARCHAR},
      coupon_id = #{couponId,jdbcType=BIGINT},
      is_bargain = #{isBargain,jdbcType=INTEGER},
      is_transfer = #{isTransfer,jdbcType=INTEGER},
      cancel_reason = #{cancelReason,jdbcType=VARCHAR},
      pause_reason = #{pauseReason,jdbcType=VARCHAR},
      offer_price = #{offerPrice,jdbcType=DECIMAL},
      discount_price = #{discountPrice,jdbcType=DECIMAL},
      pay_price = #{payPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      zone_id = #{zoneId,jdbcType=BIGINT},
      region_id = #{regionId,jdbcType=BIGINT},
      order_type = #{orderType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.macro.mall.example.YxxOrderExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yxx_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from yxx_order
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_order
    (order_sn, member_id, tel_no, member_name, member_sex, product_id, sku_id, order_status, 
      worker_id, `location`, address, detail_address, visit_time_start, visit_time_end, 
      remark, photos, coupon_id, is_bargain, is_transfer, cancel_reason, pause_reason, 
      offer_price, discount_price, pay_price, create_time, update_time, zone_id, region_id, 
      order_type)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.orderSn,jdbcType=VARCHAR}, #{item.memberId,jdbcType=BIGINT}, #{item.telNo,jdbcType=VARCHAR}, 
        #{item.memberName,jdbcType=VARCHAR}, #{item.memberSex,jdbcType=INTEGER}, #{item.productId,jdbcType=BIGINT}, 
        #{item.skuId,jdbcType=BIGINT}, #{item.orderStatus,jdbcType=INTEGER}, #{item.workerId,jdbcType=BIGINT}, 
        #{item.location,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.detailAddress,jdbcType=VARCHAR}, 
        #{item.visitTimeStart,jdbcType=TIMESTAMP}, #{item.visitTimeEnd,jdbcType=TIMESTAMP}, 
        #{item.remark,jdbcType=VARCHAR}, #{item.photos,jdbcType=VARCHAR}, #{item.couponId,jdbcType=BIGINT}, 
        #{item.isBargain,jdbcType=INTEGER}, #{item.isTransfer,jdbcType=INTEGER}, #{item.cancelReason,jdbcType=VARCHAR}, 
        #{item.pauseReason,jdbcType=VARCHAR}, #{item.offerPrice,jdbcType=DECIMAL}, #{item.discountPrice,jdbcType=DECIMAL}, 
        #{item.payPrice,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.zoneId,jdbcType=BIGINT}, #{item.regionId,jdbcType=BIGINT}, #{item.orderType,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into yxx_order (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'order_sn'.toString() == column.value">
          #{item.orderSn,jdbcType=VARCHAR}
        </if>
        <if test="'member_id'.toString() == column.value">
          #{item.memberId,jdbcType=BIGINT}
        </if>
        <if test="'tel_no'.toString() == column.value">
          #{item.telNo,jdbcType=VARCHAR}
        </if>
        <if test="'member_name'.toString() == column.value">
          #{item.memberName,jdbcType=VARCHAR}
        </if>
        <if test="'member_sex'.toString() == column.value">
          #{item.memberSex,jdbcType=INTEGER}
        </if>
        <if test="'product_id'.toString() == column.value">
          #{item.productId,jdbcType=BIGINT}
        </if>
        <if test="'sku_id'.toString() == column.value">
          #{item.skuId,jdbcType=BIGINT}
        </if>
        <if test="'order_status'.toString() == column.value">
          #{item.orderStatus,jdbcType=INTEGER}
        </if>
        <if test="'worker_id'.toString() == column.value">
          #{item.workerId,jdbcType=BIGINT}
        </if>
        <if test="'location'.toString() == column.value">
          #{item.location,jdbcType=VARCHAR}
        </if>
        <if test="'address'.toString() == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'detail_address'.toString() == column.value">
          #{item.detailAddress,jdbcType=VARCHAR}
        </if>
        <if test="'visit_time_start'.toString() == column.value">
          #{item.visitTimeStart,jdbcType=TIMESTAMP}
        </if>
        <if test="'visit_time_end'.toString() == column.value">
          #{item.visitTimeEnd,jdbcType=TIMESTAMP}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'photos'.toString() == column.value">
          #{item.photos,jdbcType=VARCHAR}
        </if>
        <if test="'coupon_id'.toString() == column.value">
          #{item.couponId,jdbcType=BIGINT}
        </if>
        <if test="'is_bargain'.toString() == column.value">
          #{item.isBargain,jdbcType=INTEGER}
        </if>
        <if test="'is_transfer'.toString() == column.value">
          #{item.isTransfer,jdbcType=INTEGER}
        </if>
        <if test="'cancel_reason'.toString() == column.value">
          #{item.cancelReason,jdbcType=VARCHAR}
        </if>
        <if test="'pause_reason'.toString() == column.value">
          #{item.pauseReason,jdbcType=VARCHAR}
        </if>
        <if test="'offer_price'.toString() == column.value">
          #{item.offerPrice,jdbcType=DECIMAL}
        </if>
        <if test="'discount_price'.toString() == column.value">
          #{item.discountPrice,jdbcType=DECIMAL}
        </if>
        <if test="'pay_price'.toString() == column.value">
          #{item.payPrice,jdbcType=DECIMAL}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'zone_id'.toString() == column.value">
          #{item.zoneId,jdbcType=BIGINT}
        </if>
        <if test="'region_id'.toString() == column.value">
          #{item.regionId,jdbcType=BIGINT}
        </if>
        <if test="'order_type'.toString() == column.value">
          #{item.orderType,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>